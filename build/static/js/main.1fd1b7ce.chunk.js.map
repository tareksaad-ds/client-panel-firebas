{"version":3,"sources":["helpers/loading.js","helpers/auth.js","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingsReducer.js","components/layout/AppNavbar.js","components/clients/Clients.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/clients/AddClients.js","components/clients/CDetails.js","components/clients/EditClient.js","actions/notifyActions.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/settings/Settings.js","actions/settingsActions.js","App.js","serviceWorker.js","index.js"],"names":["LoadingScreen","locationHelper","locationHelperBuilder","browserHistory","createHistory","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","redirectAction","newLoc","dispatch","replace","type","UserIsNotAuthenticated","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","createStoreWithFirebase","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","action","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegisteration","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavbar","isAuthenticated","onLogoutClick","e","preventDefault","props","logout","this","className","to","data-toggle","data-target","id","href","email","onClick","console","log","uid","Component","firebaseConnect","connect","Clients","clients","total","reduce","client","parseFloat","balance","toString","map","key","firstName","lastName","toFixed","firestoreConnect","collection","ordered","Sidebar","AddClients","phone","onSubmit","newClient","history","add","then","push","onChange","setState","target","name","value","htmlFor","minLength","required","disabled","CDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","update","doc","onDeleteClick","delete","balanceForm","placeholder","classnames","storeAs","match","params","EditClient","updClient","firstNameInput","current","lastNameInput","emailInput","phoneInput","balanceInput","React","createRef","defaultValue","ref","notifyUser","Alert","Login","password","login","catch","err","Register","createUser","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","setDisableBalanceOnEdit","allowRegisterationChange","setAllowRegisteration","checked","App","exact","path","component","Dashboard","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1fd1b7ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div>\r\n      <h1> Loading.. </h1>\r\n    </div>\r\n  );\r\n}\r\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport LoadingScreen from \"./loading\"; // change it to\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\nconst browserHistory = createHistory();\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty,\r\n  redirectAction: (newLoc) => (dispatch) => {\r\n    browserHistory.replace(newLoc); // or routerActions.replace\r\n    dispatch({ type: \"UNAUTHED_REDIRECT\" });\r\n  },\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty,\r\n  redirectAction: (newLoc) => (dispatch) => {\r\n    browserHistory.replace(newLoc); // or routerActions.replace\r\n    dispatch({ type: \"UNAUTHED_REDIRECT\" });\r\n  },\r\n});\r\n","import { NOTIFY_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  message: null,\r\n  messageType: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NOTIFY_USER:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        messageType: action.messageType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, compose } from \"redux\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\r\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\r\nimport \"firebase/auth\";\r\nimport notifyReducer from \"./reducers/notifyReducer\";\r\nimport settingsReducer from \"./reducers/settingsReducer\";\r\n\r\n// Reducers\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBU4V0hgpCVxwJ5m-1ik7qfOreGcKsbWAc\",\r\n  authDomain: \"client-panel-rredux.firebaseapp.com\",\r\n  databaseURL: \"https://client-panel-rredux.firebaseio.com\",\r\n  projectId: \"client-panel-rredux\",\r\n  storageBucket: \"client-panel-rredux.appspot.com\",\r\n  messagingSenderId: \"668383113971\",\r\n  appId: \"1:668383113971:web:e56425b8be7be9fde17d86\",\r\n  measurementId: \"G-2GVV3PVM83\",\r\n};\r\n\r\n// react-redux-firebase-config\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true, // Firestore for profile instead of Realtime DB\r\n};\r\n\r\n// init firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// init firestore\r\nconst firestore = firebase.firestore();\r\nconst settings = { timestampsInSnapshots: true };\r\nfirestore.settings(settings);\r\n\r\n// Add reduxReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig),\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\n// Combine Reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  notify: notifyReducer,\r\n  settings: settingsReducer,\r\n});\r\n\r\n// Check for Settings and LocalStorage\r\nif (localStorage.getItem(\"settings\") === null) {\r\n  const defaulSettings = {\r\n    disableBalanceOnAdd: true,\r\n    disableBalanceOnEdit: false,\r\n    allowRegisteration: false,\r\n  };\r\n\r\n  localStorage.setItem(\"settings\", JSON.stringify(defaulSettings));\r\n}\r\n\r\n// Create initial State\r\nconst initialState = { settings: JSON.parse(localStorage.getItem(\"settings\")) };\r\n\r\n//Create Store\r\nconst store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","export const NOTIFY_USER = \"NOTIFY_USER\";\r\nexport const DISABLE_BALANCE_ON_ADD = \"DISABLE_BALANCE_ON_ADD\";\r\nexport const DISABLE_BALANCE_ON_EDIT = \"DISABLE_BALANCE_ON_EDIT\";\r\nexport const ALLOW_REGISTERATION = \"ALLOW_REGISTERATION\";\r\n","import {\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT,\r\n  ALLOW_REGISTERATION,\r\n} from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case DISABLE_BALANCE_ON_ADD:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnAdd: action.payload,\r\n      };\r\n    case DISABLE_BALANCE_ON_EDIT:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnEdit: action.payload,\r\n      };\r\n    case ALLOW_REGISTERATION:\r\n      return {\r\n        ...state,\r\n        allowRegisteration: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isAuthenticated: false,\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { auth } = props;\r\n    if (auth.uid) {\r\n      return { isAuthenticated: true };\r\n    } else {\r\n      return { isAuthenticated: false };\r\n    }\r\n  }\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props;\r\n    firebase.logout();\r\n  };\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    const { auth } = this.props;\r\n    const { allowRegisteration } = this.props.settings;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Client Panel\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"navbarMain\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              {isAuthenticated ? (\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n            {isAuthenticated ? (\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"#!\" className=\"nav-link\">\r\n                    {auth.email}\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/settings\" className=\"nav-link\">\r\n                    Settings\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"nav-link\"\r\n                    onClick={this.onLogoutClick}\r\n                  >\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n\r\n            {allowRegisteration && !isAuthenticated ? (\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/register\" className=\"nav-link\">\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              console.log(\"Go Ahead\", allowRegisteration)\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect((state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings,\r\n  }))\r\n)(AppNavbar);\r\n","import React, { Component } from \"react\";\r\nimport { FaUsers, FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nclass Clients extends Component {\r\n  render() {\r\n    const { clients } = this.props;\r\n    if (clients) {\r\n      const total = clients.reduce((total, client) => {\r\n        return total + parseFloat(client.balance.toString());\r\n      }, 0);\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h2>\r\n                <FaUsers /> {\"\"}\r\n                Clients\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h4 className=\"text-right\">total $ {total}</h4>\r\n            </div>\r\n          </div>\r\n          <table className=\"table table-striped\">\r\n            <thead className=\"thead-inverse\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Balance</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {clients.map((client) => (\r\n                <tr key={client.id}>\r\n                  <td>\r\n                    {client.firstName}\r\n                    {client.lastName}\r\n                  </td>\r\n                  <td>{client.email}</td>\r\n                  <td>${parseFloat(client.balance).toFixed(2)}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/client/${client.id}`}\r\n                      className=\"btn btn-secondary btn-sm\"\r\n                    >\r\n                      <FaArrowCircleRight />\r\n                      Details\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>Loading..</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: \"clients\" }]),\r\n  connect((state, props) => {\r\n    return {\r\n      clients: state.firestore.ordered.clients,\r\n    };\r\n  })\r\n)(Clients);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Link to=\"/client/add\" className=\"btn btn-success btn-block\">\r\n      <BsFillPersonPlusFill /> New\r\n    </Link>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Clients from \"../clients/Clients\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-10\">\r\n        <Clients />\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <Sidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nclass AddClients extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    balance: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newClient = this.state;\r\n\r\n    const { firestore, history } = this.props;\r\n\r\n    if (newClient.balance === \"\") {\r\n      newClient.balance = 0;\r\n    }\r\n\r\n    firestore\r\n      .add({ collection: \"clients\" }, newClient)\r\n      .then(() => history.push(\"/\"));\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { disableBalanceOnAdd } = this.props.settings;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <FaArrowCircleLeft /> Back To Dashboard\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-6\"></div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Add Client</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  minLength=\"2\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={this.state.firstName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"lastName\"\r\n                  minLength=\"2\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={this.state.lastName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"phone\"\r\n                  minLength=\"11\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={this.state.phone}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"balance\">Balance</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"balance\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.balance}\r\n                  disabled={disableBalanceOnAdd}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddClients.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect((state, props) => ({\r\n    settings: state.settings,\r\n  }))\r\n)(AddClients);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft, FaPen } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass CDetails extends Component {\r\n  state = {\r\n    showBalanceUpdate: false,\r\n    balanceUpdateAmount: \"\",\r\n  };\r\n\r\n  balanceSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { client, firestore } = this.props;\r\n    const { balanceUpdateAmount } = this.state;\r\n\r\n    const clientUpdate = {\r\n      balance: parseFloat(balanceUpdateAmount),\r\n    };\r\n    firestore.update({ collection: \"clients\", doc: client.id }, clientUpdate);\r\n  };\r\n\r\n  onDeleteClick = () => {\r\n    const { client, firestore, history } = this.props;\r\n    firestore\r\n      .delete({ collection: \"clients\", doc: client.id })\r\n      .then(() => history.push(\"/\"));\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { client } = this.props;\r\n    const { showBalanceUpdate, balanceUpdateAmount } = this.state;\r\n\r\n    let balanceForm = \"\";\r\n    if (showBalanceUpdate) {\r\n      balanceForm = (\r\n        <form onSubmit={this.balanceSubmit}>\r\n          <div className=\"input-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"balanceUpdateAmount\"\r\n              placeholder=\"Add New Balance\"\r\n              value={balanceUpdateAmount}\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-dark\"\r\n                value=\"Update\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    } else {\r\n    }\r\n    if (client) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/\" className=\"btn btn-link\">\r\n                <FaArrowCircleLeft /> Back to Dashboard\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"btn-group float-right\">\r\n                <Link to={`/client/edit/${client.id}`} className=\"btn btn-dark\">\r\n                  Edit\r\n                </Link>\r\n                <button onClick={this.onDeleteClick} className=\"btn btn-danger\">\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"card\">\r\n            <h3 className=\"card-header\">\r\n              {client.firstName} {client.lastName}\r\n            </h3>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-sm-6\">\r\n                  <h4>\r\n                    Client ID: {\"\"}{\" \"}\r\n                    <span className=\"text-secondary\">{client.id}</span>\r\n                  </h4>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6\">\r\n                  <h3 className=\"pull-right\">\r\n                    Balance:{\" \"}\r\n                    <span\r\n                      className={classnames({\r\n                        \"text-danger\": client.balance > 0,\r\n                        \"text-success\": client.balance === 0,\r\n                      })}\r\n                    >\r\n                      ${parseFloat(client.balance).toFixed(2)}\r\n                    </span>{\" \"}\r\n                    <small>\r\n                      <a\r\n                        href=\"#!\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            showBalanceUpdate: !this.state.showBalanceUpdate,\r\n                          })\r\n                        }\r\n                      >\r\n                        <FaPen />\r\n                      </a>\r\n                    </small>\r\n                  </h3>\r\n                  {balanceForm}\r\n                </div>\r\n              </div>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Client Email: {client.email}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Client Phone: {client.phone}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>Loading..</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nCDetails.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect((props) => [\r\n    {\r\n      collection: \"clients\",\r\n      storeAs: \"client\",\r\n      doc: props.match.params.id,\r\n    },\r\n  ]),\r\n  connect(({ firestore: { ordered } }, props) => {\r\n    return {\r\n      client: ordered.client && ordered.client[0],\r\n    };\r\n  })\r\n)(CDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\n\r\nclass EditClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.firstNameInput = React.createRef();\r\n    this.lastNameInput = React.createRef();\r\n    this.emailInput = React.createRef();\r\n    this.phoneInput = React.createRef();\r\n    this.balanceInput = React.createRef();\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { client, firestore, history } = this.props;\r\n\r\n    const updClient = {\r\n      firstName: this.firstNameInput.current.value,\r\n      lastName: this.lastNameInput.current.value,\r\n      email: this.emailInput.current.value,\r\n      phone: this.phoneInput.current.value,\r\n      balance:\r\n        this.balanceInput.current.value === \"\"\r\n          ? 0\r\n          : this.balanceInput.current.value,\r\n    };\r\n    firestore\r\n      .update({ collection: \"clients\", doc: client.id }, updClient)\r\n      .then(history.push(\"/\"));\r\n  };\r\n\r\n  render() {\r\n    const { client } = this.props;\r\n    const { disableBalanceOnEdit } = this.props.settings;\r\n\r\n    if (client) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/\" className=\"btn btn-link\">\r\n                <FaArrowCircleLeft /> Back To Dashboard\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\"></div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Edit Client</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    minLength=\"2\"\r\n                    required\r\n                    defaultValue={client.firstName}\r\n                    ref={this.firstNameInput}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastName\"\r\n                    minLength=\"2\"\r\n                    required\r\n                    ref={this.lastNameInput}\r\n                    defaultValue={client.lastName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    ref={this.emailInput}\r\n                    defaultValue={client.email}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">Phone</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    minLength=\"11\"\r\n                    required\r\n                    ref={this.phoneInput}\r\n                    defaultValue={client.phone}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"balance\">Balance</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"balance\"\r\n                    ref={this.balanceInput}\r\n                    defaultValue={client.balance}\r\n                    disabled={disableBalanceOnEdit}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>Loading!!</h1>;\r\n    }\r\n  }\r\n}\r\nEditClient.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect((props) => [\r\n    {\r\n      collection: \"clients\",\r\n      storeAs: \"client\",\r\n      doc: props.match.params.id,\r\n    },\r\n  ]),\r\n  connect(({ firestore: { ordered }, settings }, props) => {\r\n    return {\r\n      client: ordered.client && ordered.client[0],\r\n      settings: settings,\r\n    };\r\n  })\r\n)(EditClient);\r\n","import { NOTIFY_USER } from \"./types\";\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n  return {\r\n    type: NOTIFY_USER,\r\n    message,\r\n    messageType,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nconst Alert = (props) => {\r\n  const { message, messageType } = props;\r\n  return (\r\n    <div\r\n      className={classnames(\"alert\", {\r\n        \"alert-success\": messageType === \"success\",\r\n        \"alert-danger\": messageType === \"error\",\r\n      })}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { notifyUser } from \"../../actions/notifyActions\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { firebase, notifyUser } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    firebase\r\n      .login({\r\n        email,\r\n        password,\r\n      })\r\n      .catch((err) => notifyUser(\"Invalid Login Credentials\", \"error\"));\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {message ? (\r\n                <Alert message={message} messageType={messageType} />\r\n              ) : null}\r\n              <h1 className=\"text-center pd-6 pt-6\">\r\n                <span className=\"text-primary\">\r\n                  <FaLock /> Login\r\n                </span>\r\n              </h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Login\"\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({\r\n      notify: state.notify,\r\n    }),\r\n    { notifyUser }\r\n  )\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { notifyUser } from \"../../actions/notifyActions\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { allowRegisteration } = this.props.settings;\r\n\r\n    if (!allowRegisteration) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { firebase, notifyUser } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    //Register\r\n    firebase\r\n      .createUser({ email, password })\r\n      .catch((err) => notifyUser(\"That User Already Exists\", \"error\"));\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {message ? (\r\n                <Alert message={message} messageType={messageType} />\r\n              ) : null}\r\n              <h1 className=\"text-center pd-6 pt-6\">\r\n                <span className=\"text-primary\">\r\n                  <FaLock /> Register\r\n                </span>\r\n              </h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({\r\n      notify: state.notify,\r\n      settings: state.settings,\r\n    }),\r\n    { notifyUser }\r\n  )\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\n\r\nimport {\r\n  setAllowRegisteration,\r\n  setDisableBalanceOnAdd,\r\n  setDisableBalanceOnEdit,\r\n} from \"../../actions/settingsActions\";\r\n\r\nclass Settings extends Component {\r\n  disableBalanceOnAddChange = () => {\r\n    const { setDisableBalanceOnAdd } = this.props;\r\n    setDisableBalanceOnAdd();\r\n  };\r\n  disableBalanceOnEditChange = () => {\r\n    const { setDisableBalanceOnEdit } = this.props;\r\n    setDisableBalanceOnEdit();\r\n  };\r\n  allowRegisterationChange = () => {\r\n    const { setAllowRegisteration } = this.props;\r\n    setAllowRegisteration();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      disableBalanceOnAdd,\r\n      disableBalanceOnEdit,\r\n      allowRegisteration,\r\n    } = this.props.settings;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <FaArrowCircleLeft /> Back To Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Edit Settings</div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label>Allow Registration</label>{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"allowRegisteration\"\r\n                  checked={!!allowRegisteration}\r\n                  onChange={this.allowRegisterationChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Disable Balance On Add</label>{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"disableBalanceOnAdd\"\r\n                  checked={!!disableBalanceOnAdd}\r\n                  onChange={this.disableBalanceOnAddChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Disable Balance On Edit</label>{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"disableBalanceOnEdit\"\r\n                  checked={!!disableBalanceOnEdit}\r\n                  onChange={this.disableBalanceOnEditChange}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings,\r\n  }),\r\n  { setAllowRegisteration, setDisableBalanceOnEdit, setDisableBalanceOnAdd }\r\n)(Settings);\r\n","import {\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT,\r\n  ALLOW_REGISTERATION,\r\n} from \"./types\";\r\n\r\nexport const setDisableBalanceOnAdd = () => {\r\n  //GET SETTTINGS FROM LOCALSTORAGE\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //TOGGLE CHECKED AND UNCHECKED\r\n  settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd;\r\n\r\n  //SET BACK TO LOCALSTORAGE\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n\r\n  return {\r\n    type: DISABLE_BALANCE_ON_ADD,\r\n    payload: settings.disableBalanceOnAdd,\r\n  };\r\n};\r\nexport const setDisableBalanceOnEdit = () => {\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //TOGGLE CHECKED AND UNCHECKED\r\n  settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit;\r\n\r\n  //SET BACK TO LOCALSTORAGE\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  return {\r\n    type: DISABLE_BALANCE_ON_EDIT,\r\n    payload: settings.disableBalanceOnEdit,\r\n  };\r\n};\r\nexport const setAllowRegisteration = () => {\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //TOGGLE CHECKED AND UNCHECKED\r\n  settings.allowRegisteration = !settings.allowRegisteration;\r\n\r\n  //SET BACK TO LOCALSTORAGE\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  return {\r\n    type: ALLOW_REGISTERATION,\r\n    payload: settings.allowRegisteration,\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from \"./helpers/auth\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport AddClients from \"./components/clients/AddClients\";\nimport CDetails from \"./components/clients/CDetails\";\nimport EditClient from \"./components/clients/EditClient\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Settings from \"./components/settings/Settings\";\n\nfunction App() {\n  console.log(\"store\", store);\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <AppNavbar />\n          <div className=\"container\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={UserIsAuthenticated(Dashboard)}\n              />\n              <Route\n                exact\n                path=\"/client/add\"\n                component={UserIsAuthenticated(AddClients)}\n              />\n              <Route\n                exact\n                path=\"/client/:id\"\n                component={UserIsAuthenticated(CDetails)}\n              />\n              <Route\n                exact\n                path=\"/client/edit/:id\"\n                component={UserIsAuthenticated(EditClient)}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                component={UserIsNotAuthenticated(Login)}\n              />\n              <Route\n                exact\n                path=\"/register\"\n                component={UserIsNotAuthenticated(Register)}\n              />\n              <Route\n                exact\n                path=\"/settings\"\n                component={UserIsAuthenticated(Settings)}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}